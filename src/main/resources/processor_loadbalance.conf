# sink processor
# sink groups使多个不同的sink组成一个整体，而sink processor提供了组内负载均衡和故障转移的功能。
# 有三种sink processor :default sink processor,failover sink processor,Load balancing Sink Processor。

#  负载均衡 load_balance
# web节点上的一个agent负责将 Channel 暂存的 Event 均衡到对应的多个 Sink组件上，而每个 Sink 组件分别连接到一个独立的 Agent 上。

agent.sources = s1
agent.channels = c1
agent.sinks = k1 k2


a1.sinkgroups = g1
a1.sinkgroups.g1.sinks = k1 k2
a1.sinkgroups.g1.processor.type = load_balance
a1.sinkgroups.g1.processor.selector = round_robin
# backoff：开启后，故障的节点会列入黑名单，过一定时间再次发送，如果还失败，则等待是指数增长；直到达到最大的时间。
a1.sinkgroups.g1.processor.backoff = true
#  最大的黑名单时间（单位为毫秒）
a1.sinkgroups.g1.processor.selector.maxTimeOut = 30000


# source 配置
# for i in {1..100}; do echo "hello world $i" >> /data/flume/log.out; done
agent.sources.s1.type = exec
agent.sources.s1.command = tail -f /data/flume/log.out
agent.sources.r1.channels = c1


# sink 配置
a1.sinks.k1.type = avro
a1.sinks.k1.hostname = master
a1.sinks.k1.port = 5555
a1.sinks.k1.channel = c1

a1.sinks.k2.type = avro
a1.sinks.k2.hostname = slave
a1.sinks.k2.port = 5555
a1.sinks.k2.channel = c1


# channel 配置
a1.channels.c1.type = memory
a1.channels.c1.transactionCapacity = 100
a1.channels.c1.capacity = 10000
