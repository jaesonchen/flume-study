# channel selector 渠道选择器，在实际应用中我们可能有一个source向两个以上的channel发送数据这样就需要使用选择器，
# 选择器通过判断event的header中的key来决定向那个channel发送数据，默认情况下source会向所有的channel发送数据。
# Multiplexing Channel Selector 根据header的key的值分配channel

agent.sources = s1
agent.channels = c1 c2
agent.sinks = k1 k2


# source 配置
# for i in {1..100}; do echo "hello world $i" >> /data/flume/log.out; done
agent.sources.s1.type = exec
agent.sources.s1.command = tail -f /data/flume/log.out

# selector.type 默认值：replicating；配置参数：selector.type 、selector.header、selector.mapping、selector.default
# multiplexing 按条件（根据header来判断）进入指定的channel
agent.sources.s1.selector.type = multiplexing
# 根据country属性值选择
agent.sources.s1.selector.header = country
# CN和US是state的值
agent.sources.s1.selector.mapping.CN = c1
agent.sources.s1.selector.mapping.US = c2
agent.sources.s1.selector.default = c1
agent.sources.s1.channels = c1 c2

# sink 配置
agent.sinks.k1.type = logger
agent.sinks.k1.channel = c1

agent.sinks.k2.type = logger
agent.sinks.k2.channel = c2

# channel 配置
agent.channels.c1.type = memory
agent.channels.c1.transactionCapacity = 100
agent.channels.c1.capacity = 10000

agent.channels.c2.type = memory
agent.channels.c2.transactionCapacity = 100
agent.channels.c2.capacity = 10000